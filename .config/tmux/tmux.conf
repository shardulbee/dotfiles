# Minimal tmux configuration with gruvbox theme

# Faster key repetition
set -s escape-time 0

# Set prefix to C-f
unbind C-b
unbind C-a
unbind C-[
set -g prefix C-f

set-option -g default-shell /usr/local/bin/fish

# Start windows and panes at 1, not 0
set -g base-index 1
setw -g pane-base-index 1
set -g renumber-windows on

# Increase history limit
set -g history-limit 50000

# Vi mode for copy mode
setw -g mode-keys vi

# Better copy mode bindings
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-pipe-and-cancel "pbcopy"

# Smart pane switching with awareness of Vim splits
# See: https://github.com/mrjones2014/smart-splits.nvim
bind-key -n C-h if -F "#{@pane-is-vim}" 'send-keys C-h' 'select-pane -L'
bind-key -n C-j if -F "#{@pane-is-vim}" 'send-keys C-j' 'select-pane -D'
bind-key -n C-k if -F "#{@pane-is-vim}" 'send-keys C-k' 'select-pane -U'
bind-key -n C-l if -F "#{@pane-is-vim}" 'send-keys C-l' 'select-pane -R'
bind-key -n C-\\ if -F "#{@pane-is-vim}" 'send-keys C-\\' 'select-pane -l'

# Smart pane resizing with awareness of Vim splits
bind-key -n M-S-Left if -F "#{@pane-is-vim}" 'send-keys M-S-Left' 'resize-pane -L 3'
bind-key -n M-S-Down if -F "#{@pane-is-vim}" 'send-keys M-S-Down' 'resize-pane -D 3'
bind-key -n M-S-Up if -F "#{@pane-is-vim}" 'send-keys M-S-Up' 'resize-pane -U 3'
bind-key -n M-S-Right if -F "#{@pane-is-vim}" 'send-keys M-S-Right' 'resize-pane -R 3'

# Pane navigation with prefix + vim keys (fallback)
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Split windows with v and x, keeping current path
bind v split-window -h -c '#{pane_current_path}'
bind x split-window -v -c '#{pane_current_path}'
bind c new-window -c '#{pane_current_path}'

# Kill panes and windows without confirmation
bind-key & kill-window
bind-key x kill-pane

# Enable mouse support
set -g mouse on


# Set default terminal
set -g default-terminal "xterm-ghostty"

# Onehalfdark color scheme
set -g status-style "bg=#282c34 fg=#dcdfe4"
set -g pane-border-style "fg=#5c6370"
set -g pane-active-border-style "fg=#61afef"
set -g message-style "bg=#5c6370 fg=#dcdfe4"

# Dim inactive panes by reducing foreground brightness
set -g window-style 'fg=#abb2bf'
set -g window-active-style 'fg=#dcdfe4'

# Minimal status bar
set -g status-left "#[fg=#98c379,bold] #S "
set -g status-right "#[fg=#e5c07b]#(curl -s https://am.i.mullvad.net/json | jq -r '.city')"
set -g status-left-length 30
set -g status-right-length 80
set -g status-interval 5

# Window status
setw -g window-status-format "#[fg=#abb2bf] #I:#W "
setw -g window-status-current-format "#[fg=#61afef,bold] #I:#W "

# Enable automatic window renaming
set -g automatic-rename on
set -g automatic-rename-format '#{pane_current_command}'

# Set terminal title to tmux session name
set -g set-titles on
set -g set-titles-string '#S'

# Reload config
bind r source-file ~/.tmux.conf \; display "Config reloaded!"

# Open tmux-zoxide session manager in floating pane
bind z display-popup -E -w 80% -h 80% "fish -c 'tz'"

# Terminal escape sequence integration (from Ghostty)
# Define user keys that correspond to the escape sequences sent by Ghostty
set -s user-keys[0] "\e]1337;tmux:new-window\a"
set -s user-keys[1] "\e]1337;tmux:kill-pane\a"
set -s user-keys[2] "\e]1337;tmux:next-pane\a"
set -s user-keys[3] "\e]1337;tmux:previous-pane\a"
set -s user-keys[4] "\e]1337;tmux:split-window-h\a"
set -s user-keys[5] "\e]1337;tmux:split-window-v\a"
set -s user-keys[6] "\e]1337;tmux:source-file\a"
set -s user-keys[7] "\e]1337;tmux:next-window\a"
set -s user-keys[8] "\e]1337;tmux:previous-window\a"
set -s user-keys[9] "\e]1337;tmux:zoom-pane\a"
set -s user-keys[10] "\e]1337;tmux:tz-session\a"
set -s user-keys[11] "\e]1337;tmux:select-window-1\a"
set -s user-keys[12] "\e]1337;tmux:select-window-2\a"
set -s user-keys[13] "\e]1337;tmux:select-window-3\a"
set -s user-keys[14] "\e]1337;tmux:select-window-4\a"
set -s user-keys[15] "\e]1337;tmux:select-window-5\a"
set -s user-keys[16] "\e]1337;tmux:select-window-6\a"
set -s user-keys[17] "\e]1337;tmux:select-window-7\a"
set -s user-keys[18] "\e]1337;tmux:select-window-8\a"
set -s user-keys[19] "\e]1337;tmux:select-window-9\a"
set -s user-keys[20] "\e]1337;tmux:swap-window-left\a"
set -s user-keys[21] "\e]1337;tmux:swap-window-right\a"

# Bind user keys to tmux commands
bind-key -n User0 new-window
bind-key -n User1 kill-pane
bind-key -n User2 select-pane -t :.+
bind-key -n User3 select-pane -t :.-
bind-key -n User4 split-window -h
bind-key -n User5 split-window -v
bind-key -n User6 source-file ~/.tmux.conf \; display "Config reloaded!"
bind-key -n User7 next-window
bind-key -n User8 previous-window
bind-key -n User9 resize-pane -Z
bind-key -n User10 display-popup -E -w 80% -h 80% "fish -c 'tz'"
bind-key -n User11 select-window -t :1
bind-key -n User12 select-window -t :2
bind-key -n User13 select-window -t :3
bind-key -n User14 select-window -t :4
bind-key -n User15 select-window -t :5
bind-key -n User16 select-window -t :6
bind-key -n User17 select-window -t :7
bind-key -n User18 select-window -t :8
bind-key -n User19 select-window -t :9
bind-key -n User20 if-shell "[ $(tmux display -p '#{window_index}') -gt 1 ]" "swap-window -t -1; select-window -t -1"
bind-key -n User21 if-shell "[ $(tmux display -p '#{window_index}') -lt $(tmux list-windows | wc -l | tr -d ' ') ]" "swap-window -t +1; select-window -t +1"
